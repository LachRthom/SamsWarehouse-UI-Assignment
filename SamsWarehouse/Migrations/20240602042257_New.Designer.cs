// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamsWarehouse.Models;

#nullable disable

namespace SamsWarehouse.Migrations
{
    [DbContext(typeof(WarehouseDBContext))]
    [Migration("20240602042257_New")]
    partial class New
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SamsWarehouse.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ItemName = "Granny Smith Apples",
                            Unit = "1kg",
                            UnitPrice = 5.50m
                        },
                        new
                        {
                            ProductId = 2,
                            ItemName = "Fresh tomatoes",
                            Unit = "500g",
                            UnitPrice = 5.90m
                        },
                        new
                        {
                            ProductId = 3,
                            ItemName = "Watermelon",
                            Unit = "Whole",
                            UnitPrice = 6.60m
                        },
                        new
                        {
                            ProductId = 4,
                            ItemName = "Cucumber",
                            Unit = "1 whole",
                            UnitPrice = 1.90m
                        },
                        new
                        {
                            ProductId = 5,
                            ItemName = "Red potato washed",
                            Unit = "1kg",
                            UnitPrice = 4.00m
                        },
                        new
                        {
                            ProductId = 6,
                            ItemName = "Red tipped bananas",
                            Unit = "1kg",
                            UnitPrice = 4.90m
                        },
                        new
                        {
                            ProductId = 7,
                            ItemName = "Red onion",
                            Unit = "1kg",
                            UnitPrice = 3.50m
                        },
                        new
                        {
                            ProductId = 8,
                            ItemName = "Carrots",
                            Unit = "1kg",
                            UnitPrice = 2.00m
                        },
                        new
                        {
                            ProductId = 9,
                            ItemName = "Iceburg Lettuce",
                            Unit = "1",
                            UnitPrice = 2.50m
                        },
                        new
                        {
                            ProductId = 10,
                            ItemName = "Helga's Wholemeal",
                            Unit = "1",
                            UnitPrice = 3.70m
                        },
                        new
                        {
                            ProductId = 11,
                            ItemName = "Free range chicken",
                            Unit = "1kg",
                            UnitPrice = 7.50m
                        },
                        new
                        {
                            ProductId = 12,
                            ItemName = "Manning Valley 6-pk",
                            Unit = "6 eggs",
                            UnitPrice = 3.60m
                        },
                        new
                        {
                            ProductId = 13,
                            ItemName = "A2 light milk",
                            Unit = "1 litre",
                            UnitPrice = 2.90m
                        },
                        new
                        {
                            ProductId = 14,
                            ItemName = "Chobani Strawberry Yoghurt",
                            Unit = "1",
                            UnitPrice = 1.50m
                        },
                        new
                        {
                            ProductId = 15,
                            ItemName = "Lurpak Salted Blend",
                            Unit = "250g",
                            UnitPrice = 5.00m
                        },
                        new
                        {
                            ProductId = 16,
                            ItemName = "Bega Farmers Tasty",
                            Unit = "250g",
                            UnitPrice = 4.00m
                        },
                        new
                        {
                            ProductId = 17,
                            ItemName = "Babybel Mini",
                            Unit = "100g",
                            UnitPrice = 4.20m
                        },
                        new
                        {
                            ProductId = 18,
                            ItemName = "Cobram EVOO",
                            Unit = "375ml",
                            UnitPrice = 8.00m
                        },
                        new
                        {
                            ProductId = 19,
                            ItemName = "Heinz Tomato Soup",
                            Unit = "535g",
                            UnitPrice = 2.50m
                        },
                        new
                        {
                            ProductId = 20,
                            ItemName = "John West Tuna can",
                            Unit = "95g",
                            UnitPrice = 1.50m
                        },
                        new
                        {
                            ProductId = 21,
                            ItemName = "Cadbury Dairy Milk",
                            Unit = "200g",
                            UnitPrice = 5.00m
                        },
                        new
                        {
                            ProductId = 22,
                            ItemName = "Coca Cola",
                            Unit = "2 litre",
                            UnitPrice = 2.85m
                        },
                        new
                        {
                            ProductId = 23,
                            ItemName = "Smith's Original Share Pack Crisps",
                            Unit = "170g",
                            UnitPrice = 3.29m
                        },
                        new
                        {
                            ProductId = 24,
                            ItemName = "Birds Eye Fish Fingers",
                            Unit = "375g",
                            UnitPrice = 4.50m
                        },
                        new
                        {
                            ProductId = 25,
                            ItemName = "Berri Orange Juice",
                            Unit = "2 litre",
                            UnitPrice = 6.00m
                        },
                        new
                        {
                            ProductId = 26,
                            ItemName = "Vegemite",
                            Unit = "380g",
                            UnitPrice = 6.00m
                        },
                        new
                        {
                            ProductId = 27,
                            ItemName = "Cheddar Shapes",
                            Unit = "175g",
                            UnitPrice = 2.00m
                        },
                        new
                        {
                            ProductId = 28,
                            ItemName = "Colgate Total Toothpaste Original",
                            Unit = "110g",
                            UnitPrice = 3.50m
                        },
                        new
                        {
                            ProductId = 29,
                            ItemName = "Milo Chocolate Malt",
                            Unit = "200g",
                            UnitPrice = 4.00m
                        },
                        new
                        {
                            ProductId = 30,
                            ItemName = "Weet Bix Sanitarium Organic",
                            Unit = "750g",
                            UnitPrice = 5.33m
                        },
                        new
                        {
                            ProductId = 31,
                            ItemName = "Lindt Excellence 70% Cocoa Block",
                            Unit = "100g",
                            UnitPrice = 4.25m
                        },
                        new
                        {
                            ProductId = 32,
                            ItemName = "Original Tim Tams Chocolate",
                            Unit = "200g",
                            UnitPrice = 3.65m
                        },
                        new
                        {
                            ProductId = 33,
                            ItemName = "Philadelphia Original Cream Cheese",
                            Unit = "250g",
                            UnitPrice = 4.30m
                        },
                        new
                        {
                            ProductId = 34,
                            ItemName = "Moccona Classic Instant Medium Roast",
                            Unit = "100g",
                            UnitPrice = 6.00m
                        },
                        new
                        {
                            ProductId = 35,
                            ItemName = "Capilano Squeezable Honey",
                            Unit = "500g",
                            UnitPrice = 7.35m
                        },
                        new
                        {
                            ProductId = 36,
                            ItemName = "Nutella jar",
                            Unit = "400g",
                            UnitPrice = 4.00m
                        },
                        new
                        {
                            ProductId = 37,
                            ItemName = "Arnott's Scotch Finger",
                            Unit = "250g",
                            UnitPrice = 2.85m
                        },
                        new
                        {
                            ProductId = 38,
                            ItemName = "South Cape Greek Feta",
                            Unit = "200g",
                            UnitPrice = 5.00m
                        },
                        new
                        {
                            ProductId = 39,
                            ItemName = "Sacla Pasta Tomato Basil Sauce",
                            Unit = "420g",
                            UnitPrice = 4.50m
                        },
                        new
                        {
                            ProductId = 40,
                            ItemName = "Primo English Ham",
                            Unit = "100g",
                            UnitPrice = 3.00m
                        },
                        new
                        {
                            ProductId = 41,
                            ItemName = "Primo Short cut rindless Bacon",
                            Unit = "175g",
                            UnitPrice = 5.00m
                        },
                        new
                        {
                            ProductId = 42,
                            ItemName = "Golden Circle Pineapple Pieces in natural juice",
                            Unit = "440g",
                            UnitPrice = 3.25m
                        },
                        new
                        {
                            ProductId = 43,
                            ItemName = "San Remo Linguine Pasta No 1",
                            Unit = "500g",
                            UnitPrice = 1.95m
                        });
                });

            modelBuilder.Entity("SamsWarehouse.Models.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FinalisedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("SamsWarehouse.Models.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItems");
                });

            modelBuilder.Entity("SamsWarehouse.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "user1@example.com",
                            PasswordHash = "$2a$11$dc2ZJ.NoFAjRdV/JARj95uP7eUTxoQ8xQeXLCSPbURGrDolM6TfAK"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "user2@example.com",
                            PasswordHash = "$2a$11$c8l6Hd5xUm54ZygLNTw4PuxHQaQMWoVGQqoDnjmDF3HaM2kKDAI.e"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "user3@example.com",
                            PasswordHash = "$2a$11$ouHpM9LrcYHTF2b1bayDhesq5q/B8kLYsg/TG9UbD7AtQd418gjau"
                        });
                });

            modelBuilder.Entity("SamsWarehouse.Models.ShoppingList", b =>
                {
                    b.HasOne("SamsWarehouse.Models.User", null)
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamsWarehouse.Models.ShoppingListItem", b =>
                {
                    b.HasOne("SamsWarehouse.Models.Product", null)
                        .WithMany("ListItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamsWarehouse.Models.ShoppingList", null)
                        .WithMany("ListItems")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamsWarehouse.Models.Product", b =>
                {
                    b.Navigation("ListItems");
                });

            modelBuilder.Entity("SamsWarehouse.Models.ShoppingList", b =>
                {
                    b.Navigation("ListItems");
                });

            modelBuilder.Entity("SamsWarehouse.Models.User", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
